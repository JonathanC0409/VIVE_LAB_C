@model IEnumerable<Vivelab.Modelos.Cancion>

@{
    ViewData["Title"] = "Listado de Canciones";
}

<script>
    const reproduccionesHoy = @ViewBag.ReproduccionesHoy;
    const planCodigo = @ViewBag.PlanCodigo;
</script>


<h2>@ViewData["Title"]</h2>

@if (ViewBag.Rol == "artista")
{
    <p>
        <a asp-action="Subir" class="btn btn-primary">
            <i class="bi bi-upload"></i> Subir nueva canción
        </a>
    </p>
}

<table class="table table-striped align-middle">
    <thead>
        <tr>
            <th>Título</th>
            <th>Duración</th>
            <th>Reproducción</th>
            <th>Artista</th>
            <th>Reproducciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Titulo</td>
                <td>@item.Duracion.ToString(@"hh\:mm\:ss")</td>
                <td>
                    @* Reproductor de audio *@
                    <audio controls class="audio-player" data-id="@item.Codigo" style="max-width:200px;">
                        <source src="@item.ArchivoUrl" />
                        Tu navegador no soporta el elemento
                        <code>audio</code>.
                    </audio>
                </td>
                <td>@item.Artista.Nombre</td>
                <td>@item.TotalReproducciones</td>

            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        let reproduccionesActuales = reproduccionesHoy;

        document.querySelectorAll('.audio-player').forEach(audio => {
            audio.addEventListener('play', function () {
            if (planCodigo == 0 && reproduccionesActuales >= 10) {
                this.pause();             // 🔴 Pausa el audio
                this.currentTime = 0;     // 🔁 Lo regresa al inicio
                alert("Ya alcanzaste tu límite diario de 10 reproducciones en el plan gratuito.");
                return;
            }

                const songId = this.getAttribute('data-id');

                // 1. Llama al endpoint en MVC para actualizar la sesión del usuario
                fetch(`/Musica/IncrementarReproduccionUsuario`, {
                    method: 'POST'
                }).then(() => {
                    // 2. Ahora sí llama al API de la canción (para estadísticas globales)
                    fetch(`https://localhost:7008/api/Canciones/${songId}/incrementar-reproduccion`, {
                        method: 'POST'
                    }).then(response => {
                        if (!response.ok) {
                            console.error("Error incrementando en API");
                        } else {
                            console.log("Reproducción global incrementada");
                        }
                    });

                    reproduccionesActuales++;
                });
            });
        });
    </script>
}

