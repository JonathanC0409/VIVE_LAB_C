// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Vivelab.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250614145329_v01")]
    partial class v01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Vivelab.Modelos.Album", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("ArtistaCodigo")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PortadaUrl")
                        .HasColumnType("text");

                    b.HasKey("Codigo");

                    b.HasIndex("ArtistaCodigo");

                    b.ToTable("Albumes");
                });

            modelBuilder.Entity("Vivelab.Modelos.Cancion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("AlbumCodigo")
                        .HasColumnType("integer");

                    b.Property<string>("ArchivoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ArtistaCodigo")
                        .HasColumnType("integer");

                    b.Property<int?>("ArtistaCodigoNavigationCodigo")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("Duracion")
                        .HasColumnType("interval");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalReproducciones")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("AlbumCodigo");

                    b.HasIndex("ArtistaCodigoNavigationCodigo");

                    b.ToTable("Canciones");
                });

            modelBuilder.Entity("Vivelab.Modelos.MetodoPago", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PeiGoPaymentToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Codigo");

                    b.ToTable("MetodoPagos");
                });

            modelBuilder.Entity("Vivelab.Modelos.Plan", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CantidadUsuarios")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Precio")
                        .HasColumnType("double precision");

                    b.HasKey("Codigo");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Vivelab.Modelos.Playlist", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsuarioCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("UsuarioCodigo");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("Vivelab.Modelos.PlaylistCancion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CancionCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("PlaylistCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("CancionCodigo");

                    b.HasIndex("PlaylistCodigo");

                    b.ToTable("PlaylistCanciones");
                });

            modelBuilder.Entity("Vivelab.Modelos.Suscripcion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MetodoPagoCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("PlanCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("MetodoPagoCodigo");

                    b.HasIndex("PlanCodigo");

                    b.HasIndex("UsuarioCodigo")
                        .IsUnique();

                    b.ToTable("Suscripciones");
                });

            modelBuilder.Entity("Vivelab.Modelos.Usuario", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Codigo");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Vivelab.Modelos.UsuarioSuscripcion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("SuscripcionCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("SuscripcionCodigo");

                    b.HasIndex("UsuarioCodigo");

                    b.ToTable("UsuariosSuscripciones");
                });

            modelBuilder.Entity("Vivelab.Modelos.Album", b =>
                {
                    b.HasOne("Vivelab.Modelos.Usuario", "Artista")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistaCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("Vivelab.Modelos.Cancion", b =>
                {
                    b.HasOne("Vivelab.Modelos.Album", "Album")
                        .WithMany("Canciones")
                        .HasForeignKey("AlbumCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vivelab.Modelos.Usuario", "ArtistaCodigoNavigation")
                        .WithMany("Canciones")
                        .HasForeignKey("ArtistaCodigoNavigationCodigo");

                    b.Navigation("Album");

                    b.Navigation("ArtistaCodigoNavigation");
                });

            modelBuilder.Entity("Vivelab.Modelos.Playlist", b =>
                {
                    b.HasOne("Vivelab.Modelos.Usuario", "Usuario")
                        .WithMany("Playlists")
                        .HasForeignKey("UsuarioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Vivelab.Modelos.PlaylistCancion", b =>
                {
                    b.HasOne("Vivelab.Modelos.Cancion", "Cancion")
                        .WithMany("PlaylistCanciones")
                        .HasForeignKey("CancionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vivelab.Modelos.Playlist", "Playlist")
                        .WithMany("PlaylistCanciones")
                        .HasForeignKey("PlaylistCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("Vivelab.Modelos.Suscripcion", b =>
                {
                    b.HasOne("Vivelab.Modelos.MetodoPago", "MetodoPago")
                        .WithMany("Suscripciones")
                        .HasForeignKey("MetodoPagoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vivelab.Modelos.Plan", "Plan")
                        .WithMany("Suscripciones")
                        .HasForeignKey("PlanCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vivelab.Modelos.Usuario", "UsuarioPrincipal")
                        .WithOne("Suscripcion")
                        .HasForeignKey("Vivelab.Modelos.Suscripcion", "UsuarioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MetodoPago");

                    b.Navigation("Plan");

                    b.Navigation("UsuarioPrincipal");
                });

            modelBuilder.Entity("Vivelab.Modelos.UsuarioSuscripcion", b =>
                {
                    b.HasOne("Vivelab.Modelos.Suscripcion", "Suscripcion")
                        .WithMany("UsuariosAdicionales")
                        .HasForeignKey("SuscripcionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vivelab.Modelos.Usuario", "Usuario")
                        .WithMany("UsuariosSuscripciones")
                        .HasForeignKey("UsuarioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suscripcion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Vivelab.Modelos.Album", b =>
                {
                    b.Navigation("Canciones");
                });

            modelBuilder.Entity("Vivelab.Modelos.Cancion", b =>
                {
                    b.Navigation("PlaylistCanciones");
                });

            modelBuilder.Entity("Vivelab.Modelos.MetodoPago", b =>
                {
                    b.Navigation("Suscripciones");
                });

            modelBuilder.Entity("Vivelab.Modelos.Plan", b =>
                {
                    b.Navigation("Suscripciones");
                });

            modelBuilder.Entity("Vivelab.Modelos.Playlist", b =>
                {
                    b.Navigation("PlaylistCanciones");
                });

            modelBuilder.Entity("Vivelab.Modelos.Suscripcion", b =>
                {
                    b.Navigation("UsuariosAdicionales");
                });

            modelBuilder.Entity("Vivelab.Modelos.Usuario", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Canciones");

                    b.Navigation("Playlists");

                    b.Navigation("Suscripcion");

                    b.Navigation("UsuariosSuscripciones");
                });
#pragma warning restore 612, 618
        }
    }
}
